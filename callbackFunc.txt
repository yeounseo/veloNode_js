Callback Function 이 무엇인가 ? 
JS에서는 , function은 일급 객체이다. 즉 함수는 Object 타입이며 , 다른 일급객체와 똑같이 사용 될 수 있다. (String Array Number 등등)
function 자체가 객체이므로 변수 안에 담을 수도 있고, 인수로서 다른 함수에 전달 해 줄수도 있고, 함수에서 만들어질수도 있고 반환 될 수도 있다.
Callback function은 , 특정 함수에 매개변수로서 전달될 함수를 지칭한다.
그리고 그 Callback function은 그 함수를 전달받은 함수 안에서 호출되게 된다.

아래 코드를 보며 이해해보자
// click 메소드의 인수가 변수가 아닌 함수이다.
// click 메소드의 인수가 바로 Callback 함수이다.
    $("#btn_1").click(function() {
        alert("Btn 1 Clicked");
    });

    click 메소드에 이름 없는 Callback function을 인수로 전달해준다. 그리고 Jquery 안의 click 메소드에서는, 마우스 클릭이 있으면 callback function을 호출하게 설정을 한다.

    왜 쓰는 건가 ? 

    모든 Node 어플리케이션의 비동기식 함수에서는 첫번째 매개변수로는 error를 , 마지막 매개변수로는 callback 함수를 받는다.
    fs.readFile() 함수는 비동기식으로 파일을 읽는 함수이고, 도중에 에러가 발생하면 err 객체에 에러 내용을 담고 , 그렇지 않을 시에는 파일 내용을 다 읽고 출력한다.

    만약에 ? readFile() 다음에 실행되는 코드가 그냥 console.out() 이 아닌 , readFile() 보다 작업시간이 오래 걸리는 코드였다면 텍스트 출력을 먼저 하게 될 것이다.

    callback 함수를 사용하면 , 이렇게 프로그램의 흐름을 끊지 않음으로서, Non- Blocking 코드를 사용하는 서버는 Blocking 코드를 사용하는 서버보다 더 많은 양의 요청을 빠르게 처리 할 수 있다.