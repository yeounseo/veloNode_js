4편 : REPL 터미널 

REPL 은 Read Eval Print Loop 의 약자
이는 윈도우 커맨드, 혹은 UNIX/LINUX shell 처럼 사용자가 커맨드를 입력하면 시스템이 값을 반환하는 환경을 가리킨다.

Node.js는 REPL 환경과 함께 제공되면 다음과 같은 기능을 수행 할 수 있다.

-Read - 유저의 값을 입력 받아 JavaScript 데이터 구조로 메모리에 저장한다.
- Eval - 데이터를 처리(Evaluate) 한다.
- Print - 결과값을 출력한다.
- Loop - Read, Eval, Print 를 유저가 Ctrl+ C를 두번 눌러 종료할때까지 반복한다.

Node.js 의 REPL 환경을 자바스크립트 코들르 테스팅 및 디버깅 할 때 유용하게 사용된다.

변수 사용 ! 

다른 스크립트처럼 , 변수에 값을 저장하고 나중에 다시 출력 할 수 있다.
만약 var 키워드를 사용하면 명령어를 입력했을때 변수의 값이 출력되지 않고, var 키워드를 사용하지않으면 값이 출력된다.
또한 , console.log()를 통해 출력 할 수 있다.

Underscore (_) 변수 
밑줄 변수는 최근 결과값을 지칭한다.

var x = 10;
var y = 5;
x + y ; // 15
var sum = _     <-- 여기서 Underscore 변수는 최근의 결과값은 x + y 를 지칭
console.log(sum) // 15


Ctrl+C – 현재 명령어를 종료합니다.
Ctrl+C (2번)  – Node REPL 을 종료합니다.
Ctrl+D – Node REPL을 종료합니다.
위/아래 키 – 명령어 히스토리를 탐색하고 이전 명령어를 수정합니다.
Tab – 현재 입력란에 쓴 값으로 시작하는 명령어 / 변수 목록을 확인합니다.
.help – 모든 커맨드 목록을 확인합니다.
.break – 멀티 라인 표현식 입력 도중 입력을 종료합니다.
.clear – .break 와 같습니다.
.save filename – 현재 Node REPL 세션을 파일로 저장합니다.
.load filename – Node REPL 세션을 파일에서 불러옵니다.